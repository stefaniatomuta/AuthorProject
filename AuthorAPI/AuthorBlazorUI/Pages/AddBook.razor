@page "/AddBook"
@using AuthorBlazorUI.Data
@using Microsoft.AspNetCore.Components
@using AuthorAPI.Models
@inject IRestClient restClient

@if (authors == null) {
    <h1>Loading</h1>
}
else {
    <div class="container mt-6 mb-6 p-6 my-auto h-100 w-50">
        <div class="card p-4">
            <div class="d-flex flex-column justify-content-center align-items-center col-sm">
                <h3>Add a New Book</h3>
                <EditForm Model="@book" OnSubmit="@CreateBookAsync">
                    <DataAnnotationsValidator/>
                    <p>Isbn:</p>
                    <div class="form-group">
                        <InputNumber @bind-Value="book.ISBN"/>
                    </div>
                    <ValidationMessage For="@(() => book.ISBN)"/>

                    <p>Title:</p>
                    <div class="form-group">
                        <InputText @bind-Value="book.Title"/>
                    </div>
                    <ValidationMessage For="@(() => book.Title)"/>
                    
                     <p>Genre:</p>
                    <div class="form-group">
                        <InputText @bind-Value="book.Genre"/>
                    </div>
                    <ValidationMessage For="@(() => book.Genre)"/>

                    <p>Year of publication:</p>
                    <div class="form-group">
                        <InputNumber @bind-Value="book.PublicationYear"/>
                    </div>
                    <ValidationMessage For="@(() => book.PublicationYear)"/>

                    <p>Number of pages:</p>
                    <div class="form-group">
                        <InputNumber @bind-Value="book.NumOfPages"/>
                    </div>
                    <ValidationMessage For="@(() => book.NumOfPages)"/>

                    <label>Author Id:</label>
                    <select class="form-control" @onchange="@((args) => SetSelectedAuthor(args))">
                        <option selected hidden>Select an author</option>
                        @foreach (Author author in authors) {
                            <option>@author.Id</option>
                        }
                    </select>
                    <p class="actions">
                        <button class="btn btn-outline-dark" type="submit">Add Book</button>
                    </p>
                    <label style="color: red">@error</label>
                </EditForm>
            </div>
        </div>
    </div>
}
@code {
    private Book book =  new Book();
    private IList<Author> authors;
    private int? selectedAuthorId;
    private string error = "";
    
    protected override async Task OnInitializedAsync() {
        authors = await restClient.GetAsync<Author>();
    }

    private async Task CreateBookAsync() {
        try {
            await restClient.PostAsync(new Book() {
                Genre = book.Genre,
                Title = book.Title,
                PublicationYear = book.PublicationYear,
                NumOfPages = book.NumOfPages,
                ISBN = book.ISBN
            },selectedAuthorId);
        }
        catch (Exception e) {
            error = e.Message;
        }
        
    }
    private void SetSelectedAuthor(ChangeEventArgs args) {
        selectedAuthorId = int.Parse(args.Value.ToString());
    }
}